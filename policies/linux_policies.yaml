os: linux
policies:
  # 1.a Configure Filesystem Kernel Modules

  - id: "LIN-1.a.i"
    title: "Ensure cramfs kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=cramfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=cramfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.ii"
    title: "Ensure freevxfs kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=freevxfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=freevxfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.iii"
    title: "Ensure hfs kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=hfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=hfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.iv"
    title: "Ensure hfsplus kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=hfsplus; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=hfsplus; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.v"
    title: "Ensure jffs2 kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=jffs2; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=jffs2; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.vi"
    title: "Ensure overlayfs kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=overlay; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=overlay; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.vii"
    title: "Ensure squashfs kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=squashfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=squashfs; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.viii"
    title: "Ensure udf kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: high
    levels: ["basic","moderate","strict"]
    tags: ["kernel","modules","fs"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=udf; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=udf; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  - id: "LIN-1.a.ix"
    title: "Ensure usb-storage kernel module is not available"
    category: "Filesystem"
    subcategory: "Kernel Modules"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["kernel","modules","usb"]
    check:
      kind: bash
      timeout: 60
      script: |
        set -euo pipefail; m=usb-storage; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); D=false; echo "$R"|grep -Eq 'install /bin/(true|false)|blacklist'&&D=true; C=true; det=""; [ -n "$L" ]&&{ C=false; det="$det module_loaded"; }; [ "$D" != true ]&&{ C=false; det="$det not_disabled"; }; printf '{"compliant":%s,"current":{"loaded":%s,"rule":"%s"},"expected":"not loaded and disabled","details":"%s"}' "$C" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')" "$(echo "$det"|sed -E 's/^ +| +$//g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; m=usb-storage; L=$(lsmod|awk '{print $1}'|grep -x "$m"||:); R=$(modprobe -n -v "$m" 2>/dev/null|tr -s ' '||:); printf '{"module":"%s","loaded":%s,"rule":"%s"}' "$m" "$([ -n "$L" ]&&echo true||echo false)" "$(printf %s "$R"|sed 's/"/\\"/g')"

  # 1.b Configure Filesystem Partitions - /tmp

  - id: "LIN-1.b.i"
    title: "Ensure /tmp is a separate partition"
    category: "Filesystem"
    subcategory: "/tmp"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","fstab"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; s=$(findmnt -n /tmp >/dev/null 2>&1 && echo true || echo false); printf '{"compliant":%s,"current":{"separate":%s},"expected":"separate mountpoint for /tmp"}' "$s" "$s"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /tmp >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /tmp||:); opt=$(findmnt -n -o OPTIONS /tmp||:); printf '{"mounted":true,"source":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$opt"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.b.ii"
    title: "Ensure nodev option set on /tmp partition"
    category: "Filesystem"
    subcategory: "/tmp"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","fstab","nodev"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /tmp >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /tmp"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /tmp||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /tmp"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /tmp 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.b.iii"
    title: "Ensure nosuid option set on /tmp partition"
    category: "Filesystem"
    subcategory: "/tmp"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","fstab","nosuid"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /tmp >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /tmp"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /tmp||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /tmp"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /tmp 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.b.iv"
    title: "Ensure noexec option set on /tmp partition"
    category: "Filesystem"
    subcategory: "/tmp"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","fstab","noexec"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /tmp >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"noexec on /tmp"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /tmp||:); h=$(echo "$o"|tr ',' '\n'|grep -xq noexec && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"noexec set on /tmp"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /tmp 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  # 1.c Configure /dev/shm

  - id: "LIN-1.c.i"
    title: "Ensure /dev/shm is a separate (tmpfs) partition"
    category: "Filesystem"
    subcategory: "/dev/shm"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","tmpfs"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; if findmnt -n /dev/shm >/dev/null 2>&1; then f=$(findmnt -n -o FSTYPE /dev/shm||:); s=true; else f=""; s=false; fi; printf '{"compliant":%s,"current":{"mounted":%s,"fstype":"%s"},"expected":"separate tmpfs mount for /dev/shm"}' "$s" "$s" "$(printf %s "$f"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /dev/shm >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /dev/shm||:); f=$(findmnt -n -o FSTYPE /dev/shm||:); o=$(findmnt -n -o OPTIONS /dev/shm||:); printf '{"mounted":true,"source":"%s","fstype":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$f"|sed 's/"/\\"/g')" "$(printf %s "$o"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.c.ii"
    title: "Ensure nodev option set on /dev/shm"
    category: "Filesystem"
    subcategory: "/dev/shm"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","nodev"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /dev/shm >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /dev/shm"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /dev/shm||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /dev/shm"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /dev/shm 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.c.iii"
    title: "Ensure nosuid option set on /dev/shm"
    category: "Filesystem"
    subcategory: "/dev/shm"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","nosuid"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /dev/shm >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /dev/shm"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /dev/shm||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /dev/shm"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /dev/shm 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.c.iv"
    title: "Ensure noexec option set on /dev/shm"
    category: "Filesystem"
    subcategory: "/dev/shm"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","noexec"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /dev/shm >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"noexec on /dev/shm"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /dev/shm||:); h=$(echo "$o"|tr ',' '\n'|grep -xq noexec && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"noexec set on /dev/shm"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /dev/shm 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  # 1.d Configure /home

  - id: "LIN-1.d.i"
    title: "Ensure separate partition exists for /home"
    category: "Filesystem"
    subcategory: "/home"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","fstab"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; s=$(findmnt -n /home >/dev/null 2>&1 && echo true || echo false); printf '{"compliant":%s,"current":{"separate":%s},"expected":"separate mountpoint for /home"}' "$s" "$s"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /home >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /home||:); opt=$(findmnt -n -o OPTIONS /home||:); printf '{"mounted":true,"source":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$opt"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.d.ii"
    title: "Ensure nodev option set on /home"
    category: "Filesystem"
    subcategory: "/home"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nodev"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /home >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /home"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /home||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /home"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /home 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.d.iii"
    title: "Ensure nosuid option set on /home"
    category: "Filesystem"
    subcategory: "/home"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nosuid"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /home >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /home"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /home||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /home"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /home 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  # 1.e Configure /var

  - id: "LIN-1.e.i"
    title: "Ensure separate partition exists for /var"
    category: "Filesystem"
    subcategory: "/var"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","fstab"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; s=$(findmnt -n /var >/dev/null 2>&1 && echo true || echo false); printf '{"compliant":%s,"current":{"separate":%s},"expected":"separate mountpoint for /var"}' "$s" "$s"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /var >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /var||:); opt=$(findmnt -n -o OPTIONS /var||:); printf '{"mounted":true,"source":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$opt"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.e.ii"
    title: "Ensure nodev option set on /var"
    category: "Filesystem"
    subcategory: "/var"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nodev"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /var"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /var"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.e.iii"
    title: "Ensure nosuid option set on /var"
    category: "Filesystem"
    subcategory: "/var"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nosuid"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /var"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /var"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  # 1.f Configure /var/tmp

  - id: "LIN-1.f.i"
    title: "Ensure separate partition exists for /var/tmp"
    category: "Filesystem"
    subcategory: "/var/tmp"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","fstab"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; s=$(findmnt -n /var/tmp >/dev/null 2>&1 && echo true || echo false); printf '{"compliant":%s,"current":{"separate":%s},"expected":"separate mountpoint for /var/tmp"}' "$s" "$s"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /var/tmp >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /var/tmp||:); opt=$(findmnt -n -o OPTIONS /var/tmp||:); printf '{"mounted":true,"source":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$opt"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.f.ii"
    title: "Ensure nodev option set on /var/tmp"
    category: "Filesystem"
    subcategory: "/var/tmp"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nodev"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/tmp >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /var/tmp"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/tmp||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /var/tmp"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/tmp 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.f.iii"
    title: "Ensure nosuid option set on /var/tmp"
    category: "Filesystem"
    subcategory: "/var/tmp"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nosuid"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/tmp >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /var/tmp"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/tmp||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /var/tmp"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/tmp 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.f.iv"
    title: "Ensure noexec option set on /var/tmp"
    category: "Filesystem"
    subcategory: "/var/tmp"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","noexec"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/tmp >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"noexec on /var/tmp"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/tmp||:); h=$(echo "$o"|tr ',' '\n'|grep -xq noexec && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"noexec set on /var/tmp"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/tmp 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  # 1.g Configure /var/log

  - id: "LIN-1.g.i"
    title: "Ensure separate partition exists for /var/log"
    category: "Filesystem"
    subcategory: "/var/log"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","fstab"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; s=$(findmnt -n /var/log >/dev/null 2>&1 && echo true || echo false); printf '{"compliant":%s,"current":{"separate":%s},"expected":"separate mountpoint for /var/log"}' "$s" "$s"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /var/log >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /var/log||:); opt=$(findmnt -n -o OPTIONS /var/log||:); printf '{"mounted":true,"source":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$opt"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.g.ii"
    title: "Ensure nodev option set on /var/log"
    category: "Filesystem"
    subcategory: "/var/log"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nodev"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/log >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /var/log"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/log||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /var/log"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/log 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.g.iii"
    title: "Ensure nosuid option set on /var/log"
    category: "Filesystem"
    subcategory: "/var/log"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","nosuid"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/log >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /var/log"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/log||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /var/log"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/log 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.g.iv"
    title: "Ensure noexec option set on /var/log"
    category: "Filesystem"
    subcategory: "/var/log"
    severity: medium
    levels: ["moderate","strict"]
    tags: ["mounts","noexec"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/log >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"noexec on /var/log"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/log||:); h=$(echo "$o"|tr ',' '\n'|grep -xq noexec && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"noexec set on /var/log"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/log 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  # 1.h Configure /var/log/audit

  - id: "LIN-1.h.i"
    title: "Ensure separate partition exists for /var/log/audit"
    category: "Filesystem"
    subcategory: "/var/log/audit"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","auditd"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; s=$(findmnt -n /var/log/audit >/dev/null 2>&1 && echo true || echo false); printf '{"compliant":%s,"current":{"separate":%s},"expected":"separate mountpoint for /var/log/audit"}' "$s" "$s"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; if findmnt -n /var/log/audit >/dev/null 2>&1; then src=$(findmnt -n -o SOURCE /var/log/audit||:); opt=$(findmnt -n -o OPTIONS /var/log/audit||:); printf '{"mounted":true,"source":"%s","options":"%s"}' "$(printf %s "$src"|sed 's/"/\\"/g')" "$(printf %s "$opt"|sed 's/"/\\"/g')"; else printf '{"mounted":false}'; fi

  - id: "LIN-1.h.ii"
    title: "Ensure nodev option set on /var/log/audit"
    category: "Filesystem"
    subcategory: "/var/log/audit"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","nodev","auditd"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/log/audit >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nodev on /var/log/audit"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/log/audit||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nodev && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nodev set on /var/log/audit"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/log/audit 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"

  - id: "LIN-1.h.iii"
    title: "Ensure nosuid option set on /var/log/audit"
    category: "Filesystem"
    subcategory: "/var/log/audit"
    severity: high
    levels: ["moderate","strict"]
    tags: ["mounts","nosuid","auditd"]
    check:
      kind: bash
      timeout: 30
      script: |
        set -euo pipefail; findmnt -n /var/log/audit >/dev/null 2>&1 || { printf '{"compliant":false,"details":"not mounted","expected":"nosuid on /var/log/audit"}'; exit 0; }; o=$(findmnt -n -o OPTIONS /var/log/audit||:); h=$(echo "$o"|tr ',' '\n'|grep -xq nosuid && echo true || echo false); printf '{"compliant":%s,"current":{"options":"%s"},"expected":"nosuid set on /var/log/audit"}' "$h" "$(printf %s "$o"|sed 's/"/\\"/g')"
    snapshot:
      kind: bash
      script: |
        set -euo pipefail; o=$(findmnt -n -o OPTIONS /var/log/audit 2>/dev/null||:); printf '{"options":"%s"}' "$(printf %s "$o"|sed 's/"/\\"/g')"